-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.rehearsal_points
(
    id integer,
    rating real,
    phone character varying(15),
    schedule json,
    name text,
    address text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.rooms
(
    id integer,
    air_conditioner boolean,
    price integer,
    recording_support boolean,
    area integer,
    id_rehearsal_point integer,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.booking
(
    id integer,
    time_start time without time zone,
    time_end time without time zone,
    cost integer,
    status text,
    number_of_people integer,
    id_room integer,
    id_user integer,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.staff
(
    id integer,
    full_name text,
    address text,
    experience integer,
    phone character varying(15),
    age integer,
    id_rehearsal_point integer,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.service
(
    id integer,
    name text,
    price integer,
    type text,
    requirements text,
    id_rehearsal_point integer,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.equipment
(
    id integer,
    name text,
    type text,
    brand text,
    model text,
    status text,
    id_rehearsal_point integer,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id integer,
    full_name text,
    phone character varying(15),
    email text,
    registration_date date
);

CREATE TABLE IF NOT EXISTS public.booking_service
(
    booking_id integer,
    service_id integer
);

CREATE TABLE IF NOT EXISTS public.booking_equipment
(
    booking_id integer,
    equipment_id integer
);

ALTER TABLE IF EXISTS public.booking
    ADD FOREIGN KEY (id_room)
    REFERENCES public.rooms (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.booking
    ADD FOREIGN KEY (id_user)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.staff
    ADD FOREIGN KEY (id_rehearsal_point)
    REFERENCES public.rehearsal_points (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.service
    ADD FOREIGN KEY (id_rehearsal_point)
    REFERENCES public.rehearsal_points (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.equipment
    ADD FOREIGN KEY (id_rehearsal_point)
    REFERENCES public.rehearsal_points (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.booking_service
    ADD FOREIGN KEY (booking_id)
    REFERENCES public.booking (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.booking_service
    ADD FOREIGN KEY (service_id)
    REFERENCES public.service (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.booking_equipment
    ADD FOREIGN KEY (booking_id)
    REFERENCES public.booking (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.booking_equipment
    ADD FOREIGN KEY (equipment_id)
    REFERENCES public.equipment (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;